-- File auto generated by purescript-bridge! --
module ServerTypes where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Array, Int, String)

import Prelude
import Data.Generic (class Generic)

newtype Volunteer =
    Volunteer {
      vId :: Int
    , vName :: String
    , vOvernightPreference :: Maybe OvernightPreference
    , vOvernightGenderPreference :: Maybe OvernightGenderPreference
    , vNotes :: String
    }

derive instance genericVolunteer :: Generic Volunteer

derive instance newtypeVolunteer :: Newtype Volunteer _


--------------------------------------------------------------------------------
_Volunteer :: Iso' Volunteer { vId :: Int, vName :: String, vOvernightPreference :: Maybe OvernightPreference, vOvernightGenderPreference :: Maybe OvernightGenderPreference, vNotes :: String}
_Volunteer = _Newtype

--------------------------------------------------------------------------------
newtype VolunteerShift =
    VolunteerShift {
      vsVolunteer :: Volunteer
    , vsShiftType :: ShiftType
    }

derive instance genericVolunteerShift :: Generic VolunteerShift

derive instance newtypeVolunteerShift :: Newtype VolunteerShift _


--------------------------------------------------------------------------------
_VolunteerShift :: Iso' VolunteerShift { vsVolunteer :: Volunteer, vsShiftType :: ShiftType}
_VolunteerShift = _Newtype

--------------------------------------------------------------------------------
newtype Shift =
    Shift {
      sDate :: ShiftDate
    , sVolunteers :: Array VolunteerShift
    }

derive instance genericShift :: Generic Shift

derive instance newtypeShift :: Newtype Shift _


--------------------------------------------------------------------------------
_Shift :: Iso' Shift { sDate :: ShiftDate, sVolunteers :: Array VolunteerShift}
_Shift = _Newtype

--------------------------------------------------------------------------------
data OvernightPreference =
    PreferToBeAlone
  | PreferAnotherVolunteer

derive instance genericOvernightPreference :: Generic OvernightPreference


--------------------------------------------------------------------------------
_PreferToBeAlone :: Prism' OvernightPreference Unit
_PreferToBeAlone = prism' (\_ -> PreferToBeAlone) f
  where
    f PreferToBeAlone = Just unit
    f _ = Nothing

_PreferAnotherVolunteer :: Prism' OvernightPreference Unit
_PreferAnotherVolunteer = prism' (\_ -> PreferAnotherVolunteer) f
  where
    f PreferAnotherVolunteer = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
data OvernightGenderPreference =
    Male
  | Female

derive instance genericOvernightGenderPreference :: Generic OvernightGenderPreference


--------------------------------------------------------------------------------
_Male :: Prism' OvernightGenderPreference Unit
_Male = prism' (\_ -> Male) f
  where
    f Male = Just unit
    f _ = Nothing

_Female :: Prism' OvernightGenderPreference Unit
_Female = prism' (\_ -> Female) f
  where
    f Female = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype ShiftDate =
    ShiftDate {
      year :: Int
    , month :: Int
    , day :: Int
    }

derive instance genericShiftDate :: Generic ShiftDate

derive instance newtypeShiftDate :: Newtype ShiftDate _


--------------------------------------------------------------------------------
_ShiftDate :: Iso' ShiftDate { year :: Int, month :: Int, day :: Int}
_ShiftDate = _Newtype

--------------------------------------------------------------------------------
data ShiftType =
    Overnight
  | Evening

derive instance genericShiftType :: Generic ShiftType


--------------------------------------------------------------------------------
_Overnight :: Prism' ShiftType Unit
_Overnight = prism' (\_ -> Overnight) f
  where
    f Overnight = Just unit
    f _ = Nothing

_Evening :: Prism' ShiftType Unit
_Evening = prism' (\_ -> Evening) f
  where
    f Evening = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype VolunteerDetails =
    VolunteerDetails {
      vdName :: String
    , vdNotes :: String
    , vdPref :: Maybe OvernightPreference
    , vdGenderPref :: Maybe OvernightGenderPreference
    }

derive instance genericVolunteerDetails :: Generic VolunteerDetails

derive instance newtypeVolunteerDetails :: Newtype VolunteerDetails _


--------------------------------------------------------------------------------
_VolunteerDetails :: Iso' VolunteerDetails { vdName :: String, vdNotes :: String, vdPref :: Maybe OvernightPreference, vdGenderPref :: Maybe OvernightGenderPreference}
_VolunteerDetails = _Newtype

--------------------------------------------------------------------------------
